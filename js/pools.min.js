/*!
 * Cirquity - Cirquity v1.1.0 (https://cirquity.com)
 * Copyright 2020-2020 The Cirquity Developers
 * Licensed under MIT (https://github.com/cirquity/cirquity-explorer/blob/master/LICENSE)
 */

!function(t){let e,a,o=[],n=[],s=0,l=0,i=0,r=0;t((function(){currentPage="pool";let e=setInterval((function(){appReady&&(t.getJSON("https://raw.githubusercontent.com/cirquity/cirquity-pool-list/master/cirquity-pools.json",(function(e){console.log(e),a=e.pools,t.initPool()})),clearInterval(e))}),10);t("#calcHashRate").keyup(t.calcEstimateProfit).change(t.calcEstimateProfit),t("#calcHashUnits > li > a").click((function(e){e.preventDefault(),t("#calcHashUnit").text(t(this).text()).data("mul",t(this).data("mul")),t.calcEstimateProfit()}))})),t.initPool=function(){a.forEach((function(e){const a=e.api,n=e.url,i=e.name;void 0!==a&&t.getJSON(a+"/stats",(function(e,a,r){let c=new Date(parseInt(e.pool.lastBlockFound)),u=i;0===u.length&&(u=n),t("#pools-rows").append(t.renderPoolRow(n,u,e,c)),s+=parseInt(e.pool.hashrate),l+=parseInt(e.pool.miners),t.updateText("totalPoolsHashrate",t.getReadableHashRateString(s)+"/sec"),t.updateText("total_miners",t.localizeNumber(l)),o.push([u,parseInt(e.pool.hashrate),""])}))})),setInterval((function(){s=0,l=0,o=[],a.forEach((function(e,a,n){let i,r=a.indexOf("/");i=r<0?a:a.substr(0,r),t.getJSON(e+"/stats",(e,a,n)=>{let r=new Date(parseInt(e.pool.lastBlockFound)),c=t.renderDate(r);s+=parseInt(e.pool.hashrate),l+=parseInt(e.pool.miners),t.updateText("height-"+i,t.localizeNumber(e.network.height)),t.updateText("hashrate-"+i,t.localizeNumber(e.pool.hashrate)+" H/s"),t.updateText("miners-"+i,t.localizeNumber(e.pool.miners)),t.updateText("lastFound-"+i,c),t.updateText("totalPoolsHashrate",t.getReadableHashRateString(s)+"/sec"),t.updateText("total_miners",t.localizeNumber(l)),t.updateText("networkHashrate",t.getReadableHashRateString(lastStats.difficulty/blockTargetInterval)+"/sec"),t.updateText("networkDifficulty",t.getReadableDifficultyString(lastStats.difficulty,0).toString()),o.push([i,parseInt(e.pool.hashrate),""])})}))}),12e4),t.updatePool()},t.updatePool=function(){t.updateText("networkHashrate",t.getReadableHashRateString(lastStats.difficulty/blockTargetInterval)+"/sec"),t.updateText("networkDifficulty",t.getReadableDifficultyString(lastStats.difficulty,0).toString()),t.getBlocks(),t.renderLastBlock()},t.getBlocks=function(){e&&e.abort(),e=t.ajax({url:api+"/json_rpc",method:"POST",data:JSON.stringify({jsonrpc:"2.0",id:"getBlocks",method:"f_blocks_list_json",params:{height:lastStats.height-1}}),dataType:"json",cache:"false",success:function(e){e.result&&t.when(t.renderBlocks(e.result.blocks)).then((function(){setTimeout((function(){t.calcAvgHashRate()}),100)}))}})},t.renderBlocks=function(t){for(let e=0;e<t.length;e++){const a=t[e];n.push(parseInt(a.difficulty))}},t.renderLastBlock=function(){t.ajax({url:api+"/json_rpc",method:"POST",data:JSON.stringify({jsonrpc:"2.0",id:"lastBlock",method:"getlastblockheader",params:{}}),dataType:"json",cache:"false",success:function(e){let a=e.result.block_header.hash;t.ajax({url:api+"/json_rpc",method:"POST",data:JSON.stringify({jsonrpc:"2.0",id:"block",method:"f_block_json",params:{hash:a}}),dataType:"json",cache:"false",success:function(t){const e=t.result.block;i=parseInt(e.baseReward)}})}})},t.renderPoolRow=function(e,a,o,n){let s=t.renderDate(n),l=[];return l.push("<tr>"),l.push('<th scope="row" id="host-'+a+'"><a target="_blank" href="'+e+'">'+a+"</a></th>"),l.push('<td id="height-'+a+'" class="height">'+t.localizeNumber(o.network.height)+"</td>"),l.push('<td id="hashrate-'+a+'">'+t.localizeNumber(o.pool.hashrate)+" H/s</td>"),l.push('<td id="miners-'+a+'">'+t.localizeNumber(o.pool.miners)+"</td>"),l.push('<td id="totalFee-'+a+'">'+t.calculateTotalFee(o)+"%</td>"),l.push('<td id="minPayout-'+a+'">'+t.getReadableCoins(o.config.minPaymentThreshold,2)+"</td>"),l.push('<td><span id="lastFound-'+a+'">'+s+"</span></td>"),l.push("</tr>"),l.join("")},t.calcAvgHashRate=function(){let e=n.reduce((function(t,e){return t+e}),0);r=Math.round(e/n.length);blockTargetInterval;t.updateText("avgDifficulty",t.getReadableDifficultyString(r,0).toString()),t.updateText("avgHashrate",t.getReadableHashRateString(r/blockTargetInterval))},t.calcEstimateProfit=function(){try{let e=Math.pow(1024,parseInt(t("#calcHashUnit").data("mul"))),a=parseFloat(t("#calcHashRate").val())*e,o=86400*a/r*i;if(console.log(e,a,o,i),o)return void t.updateText("calcHashAmount",t.getReadableCoins(o,2,!0))}catch(t){}t.updateText("calcHashAmount","0")},t.calculateTotalFee=function(t){let e=t.config.fee;for(let a in t.config.donation)t.config.donation.hasOwnProperty(a)&&(e+=t.config.donation[a]);return e},t.translateAPI2=function(t){return{network:{height:""},pool:{hashrate:t.pool_statistics.hashRate,miners:t.pool_statistics.miners},config:{minPaymentThreshold:""}}}}(jQuery);